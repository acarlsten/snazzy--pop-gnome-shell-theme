// generic drawing of more complex things

// provide font size in pt, with px fallback
@function pt($size: $root-font-size) {
  @return ($size * 0.75 / 1px) + pt;
}

// provide icon size in em, with px fallback
@function em($size: 16px) {
  @return ($size / $root-font-size) + em;
}

// Typography
// based on:
// https://material.io/guidelines/style/typography.html#typography-styles

@mixin font($size) {
  @if $size == display-4 {
    // font-family: $large-font-family;
    font-size: 112px;
    font-weight: 300;
    // line-height: 1;
  }

  @if $size == display-3 {
    // font-family: $large-font-family;
    font-size: 56px;
    font-weight: 400;
    // line-height: 1;
  }

  @if $size == display-2 {
    // font-family: $large-font-family;
    font-size: 45px;
    font-weight: 400;
    // line-height: 48px;
  }

  @if $size == display-1 {
    // font-family: $large-font-family;
    font-size: 34px;
    font-weight: 400;
    // line-height: 40px;
  }

  @if $size == headline {
    font-size: pt(24px);
    font-weight: 400;
    // line-height: 32px;
  }

  @if $size == title {
    font-size: pt(20px);
    font-weight: 500;
    // line-height: 1;
  }

  @if $size == subheading {
    font-size: pt($subheading-size);
    font-weight: 400;
    // line-height: 24px;
  }

  @if $size == body-2 {
    font-size: pt($root-font-size);
    font-weight: 500;
    // line-height: 24px;
  }

  @if $size == body-1 {
    font-size: pt($root-font-size);
    font-weight: 400;
    // line-height: 20px;
  }

  @if $size == caption {
    font-size: pt(12px);
    font-weight: 400;
    // line-height: 1;
  }

  @if $size == button {
    font-size: pt($root-font-size);
    font-weight: 500;
    // line-height: 20px;
  }
}


@mixin entry($type, $text_color: $fg_color, $focus_color: $accent_color) {
//
// entry
//

  @if $type == normal {
    color: $text_color;
    background-color: if($text_color == $fg_color, rgba($base_color, 0.05), rgba($fg_color, 0.01));
    border-color: transparent;
    border-radius: $pop_radius $pop_radius 0 0;
    box-shadow: inset 0 $line_size*-1 if($text_color == $fg_color, rgba($fg_color, 0.25), rgba($inverse_fg_color, 0.25));
  }

  @if $type == focus {
    color: $text_color;
    background-color: if($text_color == $fg_color, rgba($base_color, 0.05), rgba($fg_color, 0.01));
    border-color: transparent;
    border-radius: $pop_radius $pop_radius 0 0;
    box-shadow: inset 0 $line_size*-1 $focus_color;
  }

  @if $type == hover {
    border-radius: $pop_radius $pop_radius 0 0;
  }

  @if $type == insensitive {
    color: $disabled_fg_color;
    border-color: transparent;
    border-radius: $pop_radius $pop_radius 0 0;
    box-shadow: inset 0 $line_size*-1 $divider_color;
  }
}


@mixin button($type, $base_color: $base_color, $text_color: $fg_color) {
//
// button
//

  @if $type == normal {
    color: if($text_color == $fg_color, $button_fg_color, $text_color);
    background-color: $base_color;
    border-color: transparent;
    box-shadow: $shadow_1;
    text-shadow: none;
    icon-shadow: none;
  }

  @if $type == focus {
    color: $text_color;
    text-shadow: none;
    icon-shadow: none;
    box-shadow: $shadow_0;
    // box-shadow: inset 0px 0px 0px 2px $divider_color;
  }

  @if $type == hover {
    color: $text_color;
    background-color: $base_color;
    border-color: transparent;
    box-shadow: $shadow_2;
    text-shadow: none;
    icon-shadow: none;
  }

  @if $type == active {
    color: $text_color;
    background-color: mix($text_color, $base_color, percentage($lower_opacity));
    border-color: transparent;
    box-shadow: $shadow_2;
    text-shadow: none;
    icon-shadow: none;
  }

  @if $type == insensitive {
    color: if($text_color == $fg_color, $disabled_secondary_fg_color, $text_color);
    background-color: if($base_color == $base_color, $divider_color, $base_color);
    border-color: transparent;
    box-shadow: $shadow_0;
    text-shadow: none;
    icon-shadow: none;
  }

  @if $type == flat-normal {
    color: if($text_color != $inverse_fg_color, $button_fg_color, $inverse_fg_color);
    background-color: transparent;
    border-color: transparent;
    box-shadow: $shadow_0;
    text-shadow: none;
    icon-shadow: none;
  }

  @if $type == flat-focus {
    color: if($text_color != $inverse_fg_color, $fg_color, $inverse_fg_color);
    background-color: rgba($accent_color, 0.3);
    text-shadow: none;
    icon-shadow: none;
    box-shadow: $shadow_0;
    // box-shadow: inset 0px 0px 0px 2px $divider_color;
  }

  @if $type == flat-hover {
    color: if($text_color != $inverse_fg_color, $fg_color, $inverse_fg_color);
    background-color: if($text_color != $inverse_fg_color, $divider_color, $inverse_divider_color);
    border-color: transparent;
    box-shadow: $shadow_0;
    text-shadow: none;
    icon-shadow: none;
  }

  @if $type == flat-active {
    color: if($text_color != $inverse_fg_color, $fg_color, $inverse_fg_color);
    background-color: if($text_color != $inverse_fg_color, $track_color, $inverse_track_color);
    border-color: transparent;
    box-shadow: $shadow_0;
    text-shadow: none;
    icon-shadow: none;
  }

  @if $type == flat-insensitive {
    color: if($text_color != $inverse_fg_color, $disabled_secondary_fg_color, $inverse_disabled_secondary_fg_color);
    background-color: transparent;
    border-color: transparent;
    box-shadow: $shadow_0;
    text-shadow: none;
    icon-shadow: none;
  }
}
